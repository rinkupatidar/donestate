(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[4884],{74884:function(o,t,s){var e,i,n;n=function(o){function t(o,t,s,e){o.hasOwnProperty(t)||(o[t]=e.apply(null,s),"function"==typeof CustomEvent&&window.dispatchEvent(new CustomEvent("HighchartsModuleLoaded",{detail:{path:t,module:o[t]}})))}t(o=o?o._modules:{},"Stock/Indicators/MACD/MACDIndicator.js",[o["Core/Globals.js"],o["Core/Series/SeriesRegistry.js"],o["Core/Utilities.js"]],function(o,t,s){var e,i=this&&this.__extends||(e=function(o,t){return(e=Object.setPrototypeOf||({__proto__:[]})instanceof Array&&function(o,t){o.__proto__=t}||function(o,t){for(var s in t)t.hasOwnProperty(s)&&(o[s]=t[s])})(o,t)},function(o,t){function s(){this.constructor=o}e(o,t),o.prototype=null===t?Object.create(t):(s.prototype=t.prototype,new s)}),n=o.noop,r=t.seriesTypes.sma,p=s.extend,a=s.correctFloat,l=s.defined,h=s.merge;return p((s=function(s){function e(){var o=null!==s&&s.apply(this,arguments)||this;return o.data=void 0,o.options=void 0,o.points=void 0,o.currentLineZone=void 0,o.graphmacd=void 0,o.graphsignal=void 0,o.macdZones=void 0,o.signalZones=void 0,o}return i(e,s),e.prototype.init=function(){t.seriesTypes.sma.prototype.init.apply(this,arguments);var o=this.color,s=this.userOptions._colorIndex;this.options&&(l(this.userOptions._colorIndex)&&(this.options.signalLine&&this.options.signalLine.styles&&!this.options.signalLine.styles.lineColor&&(this.userOptions._colorIndex++,this.getCyclic("color",void 0,this.chart.options.colors),this.options.signalLine.styles.lineColor=this.color),this.options.macdLine&&this.options.macdLine.styles&&!this.options.macdLine.styles.lineColor&&(this.userOptions._colorIndex++,this.getCyclic("color",void 0,this.chart.options.colors),this.options.macdLine.styles.lineColor=this.color)),this.macdZones={zones:this.options.macdLine.zones,startIndex:0},this.signalZones={zones:this.macdZones.zones.concat(this.options.signalLine.zones),startIndex:this.macdZones.zones.length},this.resetZones=!0),this.color=o,this.userOptions._colorIndex=s},e.prototype.toYData=function(o){return[o.y,o.signal,o.MACD]},e.prototype.translate=function(){var t=this,s=["plotSignal","plotMACD"];o.seriesTypes.column.prototype.translate.apply(t),t.points.forEach(function(o){[o.signal,o.MACD].forEach(function(e,i){null!==e&&(o[s[i]]=t.yAxis.toPixels(e,!0))})})},e.prototype.destroy=function(){this.graph=null,this.graphmacd=this.graphmacd&&this.graphmacd.destroy(),this.graphsignal=this.graphsignal&&this.graphsignal.destroy(),t.seriesTypes.sma.prototype.destroy.apply(this,arguments)},e.prototype.drawGraph=function(){for(var o,s=this,e=s.points,i=e.length,n=s.options,r=s.zones,p={options:{gapSize:n.gapSize}},a=[[],[]];i--;)l((o=e[i]).plotMACD)&&a[0].push({plotX:o.plotX,plotY:o.plotMACD,isNull:!l(o.plotMACD)}),l(o.plotSignal)&&a[1].push({plotX:o.plotX,plotY:o.plotSignal,isNull:!l(o.plotMACD)});["macd","signal"].forEach(function(o,e){s.points=a[e],s.options=h(n[o+"Line"].styles,p),s.graph=s["graph"+o],s.currentLineZone=o+"Zones",s.zones=s[s.currentLineZone].zones,t.seriesTypes.sma.prototype.drawGraph.call(s),s["graph"+o]=s.graph}),s.points=e,s.options=n,s.zones=r,s.currentLineZone=null},e.prototype.getZonesGraphs=function(o){var t=s.prototype.getZonesGraphs.call(this,o),e=t;return this.currentLineZone&&((e=t.splice(this[this.currentLineZone].startIndex+1)).length?e.splice(0,0,o[0]):e=[o[0]]),e},e.prototype.applyZones=function(){var o=this.zones;this.zones=this.signalZones.zones,t.seriesTypes.sma.prototype.applyZones.call(this),this.graphmacd&&this.options.macdLine.zones.length&&this.graphmacd.hide(),this.zones=o},e.prototype.getValues=function(o,s){var e=s.longPeriod-s.shortPeriod,i=0,n=[],r=[],p=[];if(!(o.xData.length<s.longPeriod+s.signalPeriod)){var h=t.seriesTypes.ema.prototype.getValues(o,{period:s.shortPeriod,index:s.index}),c=t.seriesTypes.ema.prototype.getValues(o,{period:s.longPeriod,index:s.index});for(o=0,h=h.values,c=c.values;o<=h.length;o++)l(c[o])&&l(c[o][1])&&l(h[o+e])&&l(h[o+e][0])&&n.push([h[o+e][0],0,null,h[o+e][1]-c[o][1]]);for(o=0;o<n.length;o++)r.push(n[o][0]),p.push([0,null,n[o][3]]);for(o=0,s=(s=t.seriesTypes.ema.prototype.getValues({xData:r,yData:p},{period:s.signalPeriod,index:2})).values;o<n.length;o++)n[o][0]>=s[0][0]&&(n[o][2]=s[i][1],p[o]=[0,s[i][1],n[o][3]],null===n[o][3]?(n[o][1]=0,p[o][0]=0):(n[o][1]=a(n[o][3]-s[i][1]),p[o][0]=a(n[o][3]-s[i][1])),i++);return{values:n,xData:r,yData:p}}},e.defaultOptions=h(r.defaultOptions,{params:{shortPeriod:12,longPeriod:26,signalPeriod:9,period:26},signalLine:{zones:[],styles:{lineWidth:1,lineColor:void 0}},macdLine:{zones:[],styles:{lineWidth:1,lineColor:void 0}},threshold:0,groupPadding:.1,pointPadding:.1,crisp:!1,states:{hover:{halo:{size:0}}},tooltip:{pointFormat:'<span style="color:{point.color}">‚óè</span> <b> {series.name}</b><br/>Value: {point.MACD}<br/>Signal: {point.signal}<br/>Histogram: {point.y}<br/>'},dataGrouping:{approximation:"averages"},minPointLength:0}),e}(r)).prototype,{nameComponents:["longPeriod","shortPeriod","signalPeriod"],pointArrayMap:["y","signal","MACD"],parallelArrays:["x","y","signal","MACD"],pointValKey:"y",markerAttribs:n,getColumnMetrics:o.seriesTypes.column.prototype.getColumnMetrics,crispCol:o.seriesTypes.column.prototype.crispCol,drawPoints:o.seriesTypes.column.prototype.drawPoints}),t.registerSeriesType("macd",s),s}),t(o,"masters/indicators/macd.src.js",[],function(){})},o.exports?(n.default=n,o.exports=n):void 0!==(i=(function(o){return n(o),n.Highcharts=o,n}).apply(t,[s(78840),s(50496)]))&&(o.exports=i)}}]);